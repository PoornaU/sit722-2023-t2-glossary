[
  {"id": 1, "term": "NodeJS", "description": "An open-source, cross-platform, JavaScript runtime environment that executes JavaScript code outside a web browser.", "references": "https://nodejs.org/en/about/"},
  {"id": 2, "term": "Docker", "description": "An open-source platform that uses OS-level virtualization to deliver software in packages called containers.", "references": "https://docs.docker.com/get-started/overview/"},
  {"id": 3, "term": "Kubernetes", "description": "An open-source container-orchestration system for automating application deployment, scaling, and management.", "references": "https://kubernetes.io/docs/concepts/overview/what-is-kubernetes/"},
  {"id": 4, "term": "Terraform", "description": "An open-source infrastructure as code software tool that provides a consistent CLI workflow to manage hundreds of cloud services.", "references": "https://www.terraform.io/intro/index.html"},
  {"id": 5, "term": "Microservices", "description": "An architectural style that structures an application as a collection of services that are highly maintainable and testable.", "references": "https://microservices.io/"},
  {"id": 6, "term": "gitignore", "description": "A text file that tells Git which files or folders to ignore in a project.", "references": "https://git-scm.com/docs/gitignore"},
  {"id": 7, "term": "Express", "description": "A minimal and flexible Node.js web application framework that provides a robust set of features for web and mobile applications.", "references": "https://expressjs.com/"},
  {"id": 8, "term": "JavaScript", "description": "A high-level, interpreted programming language that is a core technology of the World Wide Web, alongside HTML and CSS.", "references": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide"},
  {"id": 9, "term": "MongoDB", "description": "A source-available cross-platform document-oriented database program, classified as a NoSQL database program. MongoDB uses JSON-like documents with optional schemas.", "references": "https://www.mongodb.com/what-is-mongodb"},
  {"id": 10, "term": "CI/CD", "description": "CI/CD bridges the gaps between development and operation activities and teams by enforcing automation in building, testing and deployment of applications.", "references": "https://www.redhat.com/en/topics/devops/what-is-ci-cd"},
  {"id": 11, "term": "AIops", "description": "Artificial intelligence for IT operations (AIops) is an umbrella term for the use of big data analytics, machine learning and other AI technologies to automate the identification and resolution of common IT issues. The systems, services and tools involved in AIops are designed to identify and resolve issues more efficiently than traditional IT operations.", "references": "https://www.ibm.com/topics/aiops#:~:text= Coined%20by%20Gartner%2C%20AIOps%E2%80%94i.e. ,automate%20and%20streamline%20operational%20workflows."},    
  {"id": 12, "term": "DevSecOps", "description": "DevSecOps is the philosophy of integrating security practices within the DevOps process. DevSecOps involves creating a 'Security as Code' culture with ongoing, flexible collaboration between release engineers and security teams.", "references": "https://www.redhat.com/en/topics/devops/what-is-devsecops"},    
  {"id": 13, "term": "Digital Transformation", "description": "The integration of digital technology into all areas of a business, fundamentally changing how you operate and deliver value to customers. It's also a cultural change that requires organizations to continually challenge the status quo, experiment, and get comfortable with failure.", "references": "https://www.mckinsey.com/featured-insights/mckinsey-explainers/what-is-digital-transformation"},    
  {"id": 14, "term": "I&O Leaders", "description": "Infrastructure & Operations (I&O) leaders are responsible for the strategy, design, execution and operations of all components of IT infrastructure and the related operations to ensure it supports the overall business goals.", "references": "https://www.gartner.com/en/information-technology/role/infrastructure-operations-leaders"},    
  {"id": 15, "term": "User Acceptance Testing (UAT)", "description": "UAT is the last phase of software testing process. During UAT, actual software users test the software to make sure it can handle required tasks in real-world scenarios, according to specifications.", "references": "https://www.softwaretestinghelp.com/what-is-user-acceptance-testing-uat/"},    
  {"id": 16, "term": "Smoke Testing", "description": "Smoke Testing, also known as “Build Verification Testing”, is a type of software testing that comprises of a non-exhaustive set of tests that aim at ensuring that the most important functions work.", "references": "https://www.techtarget.com/searchsoftwarequality/definition/smoke-testing#:~: text=Smoke%20testing%2C%20also%20called%20build,not%20delve%20into%20finer%20details."},    
  {"id": 17, "term": "Change Management Tools", "description": "These tools support the systematic approach to dealing with change, both from the perspective of an organization and on the individual level.", "references": "https://creately.com/guides/change-management-tools-list/"},    
  {"id": 18, "term": "Orchestration", "description": "In the context of computing, orchestration means automating the deployment, coordination, and management of complex software interactions within a system.", "references": "https://www.dynatrace.com/knowledge-base/devops-orchestration/"},    
  {"id": 19, "term": "Monitoring Toolchain", "description": "These tools provide the necessary functionality to track the performance of applications and infrastructure, as well as to detect and diagnose complex application performance problems.", "references": "https://devops.com/monitoring-the-devops-tool-chain/"},    
  {"id": 20, "term": "Gate Tests", "description": "These are defined points in a pipeline where an automated test suite would be run and, if the tests pass, the next step in the pipeline would be executed.", "references": "https://cloud.google.com/architecture/devops/devops-tech-test-automation"}, 
  {"id": 21, "term": "Dockerfile", "description": "A text document used to assemble an image. It contains commands and instructions that Docker uses to automatically build a new container image.", "references": "https://docs.docker.com/engine/reference/builder/"},
  {"id": 22, "term": "Docker Compose", "description": "A tool for defining and running multi-container Docker applications. With Compose, you use a YAML file to configure your applications services.", "references": "https://docs.docker.com/compose/"},
  {"id": 23, "term": "Docker Swarm", "description": "Dockers native clustering and orchestration tool. Swarm allows users to deploy, scale, and manage multi-container applications across multiple host systems.", "references": "https://docs.docker.com/engine/swarm/"},
  {"id": 24, "term": "Docker Hub", "description": "A cloud-based registry where Docker users and partners create, test, store and distribute container images.", "references": "https://docs.docker.com/docker-hub/"},
  {"id": 25, "term": "Docker Volume", "description": "A mechanism to persist data generated by and used by Docker containers. It's designed to decouple the application state from the system, ensuring the data outlives the container.", "references": "https://docs.docker.com/storage/volumes/"},
  {"id": 26, "term": "Docker Machine", "description": "A tool that allows you to install and manage Docker on virtual hosts, and manage the hosts with docker-machine commands.", "references": "https://docs.docker.com/machine/overview/"},
  {"id": 27, "term": "Docker Image", "description": "A lightweight, stand-alone, and executable software package that contains everything needed to run a piece of software, including the application code, libraries, and dependencies.", "references": "https://docs.docker.com/glossary/?term=image"},
  {"id": 28, "term": "Docker Registry", "description": "A server-side application that lets you store and distribute Docker images. While Docker Hub is a centralized registry, Docker also allows you to run and manage your own registry.", "references": "https://docs.docker.com/registry/deploying/"},
  {"id": 29, "term": "Containerization", "description": "The process of encapsulating an application and its required environment into a container. It helps in ensuring that the application works uniformly across different environments.", "references": "https://www.docker.com/resources/what-container"},
  {"id": 30, "term": "Container Orchestration", "description": "The automated arrangement, coordination, and management of computer systems, services, and middleware in containers. Tools like Kubernetes, Docker Swarm, and Mesos provide container orchestration capabilities.", "references": "https://docs.docker.com/get-started/orchestration/"},
  {"id": 31, "term": "Azure", "description": "Microsoft's cloud computing service for building, testing, deploying, and managing applications and services through Microsoft-managed data centers.", "references": "https://azure.microsoft.com/en-us/overview/what-is-azure/"},
  {"id": 32, "term": "Terraform Provider", "description": "A plugin for Terraform that makes a collection of related resources available. The provider integrates Terraform with a specific platform or service, like Azure in this context.", "references": "https://registry.terraform.io/browse/providers"},
  {"id": 33, "term": "azurerm", "description": "The Terraform provider for managing resources in Microsoft Azure.", "references": "https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs"},
  {"id": 34, "term": "Azure Container Registry (ACR)", "description": "A managed Docker container registry service used for storing private Docker container images in Azure.", "references": "https://azure.microsoft.com/en-us/services/container-registry/"},
  {"id": 35, "term": "Azure Kubernetes Service (AKS)", "description": "A managed Kubernetes service that simplifies deploying, managing, and scaling containerized applications using Kubernetes in Azure.", "references": "https://azure.microsoft.com/en-us/services/kubernetes-service/"},
  {"id": 36, "term": "Service Principal", "description": "An identity created for use with applications, hosted services, and automated tools to access Azure resources.", "references": "https://docs.microsoft.com/en-us/azure/active-directory/develop/app-objects-and-service-principals"},
  {"id": 37, "term": "SSH Key", "description": "A cryptographic key pair used for secure shell (SSH) authentication. Consists of a public and a private key.", "references": "https://www.ssh.com/ssh/key/"},
  {"id": 38, "term": "kube_config", "description": "A configuration file for accessing the Kubernetes API server. It contains details like cluster, context, and user information.", "references": "https://kubernetes.io/docs/concepts/configuration/organize-cluster-access-kubeconfig/"},
  {"id": 39, "term": "Resource Group", "description": "A logical container for resources deployed on Azure. It provides a way to manage and organize related Azure resources.", "references": "https://docs.microsoft.com/en-us/azure/azure-resource-manager/management/manage-resource-groups-portal"},
  {"id": 40, "term": "TLS Provider", "description": "In Terraform, the TLS provider exposes resources to generate and manipulate cryptographic materials, such as private keys and certificates.", "references": "https://registry.terraform.io/providers/hashicorp/tls/latest/docs"}
  
]
